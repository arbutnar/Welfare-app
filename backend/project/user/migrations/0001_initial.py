# Generated by Django 4.2 on 2024-08-29 14:32

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Worksite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(blank=True, max_length=300, null=True)),
                ('address', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=128, unique=True)),
                ('name', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator(message='Enter a valid name. Only letters and spaces are allowed.', regex="^(?!\\s*$)[A-Za-zÀ-ÖØ-öø-ÿ'\\s]+$")])),
                ('surname', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator(message='Enter a valid surname. Only letters and spaces are allowed.', regex="^(?!\\s*$)[A-Za-zÀ-ÖØ-öø-ÿ'\\s]+$")])),
                ('birthday', models.DateField()),
                ('interest', models.IntegerField(blank=True, choices=[(0, 'Sport'), (1, 'Reading'), (2, 'Relax'), (3, 'Prevention'), (4, 'Other')], null=True)),
                ('marital_status', models.IntegerField(blank=True, choices=[(0, 'Single'), (1, 'Married')], null=True)),
                ('childrens', models.BooleanField(blank=True, null=True)),
                ('elderly_parents', models.BooleanField(blank=True, null=True)),
                ('street', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator(message='Enter a valid street address. Only letters, numbers and spaces are allowed.', regex="^(?!\\s*$)[0-9A-Za-zÀ-ÖØ-öø-ÿ'\\s]+$")])),
                ('postal_code', models.CharField(max_length=10)),
                ('city', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='Enter a valid City. Only letters and spaces are allowed.', regex="^(?!\\s*$)[A-Za-zÀ-ÖØ-öø-ÿ'\\s]+$")])),
                ('country', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='Enter a valid Country. Only letters and spaces are allowed.', regex="^(?!\\s*$)[A-Za-zÀ-ÖØ-öø-ÿ'\\s]+$")])),
                ('physical', models.BooleanField(default=False)),
                ('economic', models.BooleanField(default=False)),
                ('psychological', models.BooleanField(default=False)),
                ('family', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('worksite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.worksite')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
