"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 3.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.

BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = os.getenv('SECRET_KEY')
DEBUG = os.getenv('DEBUG')
ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS').split(" ")


# Application definition

INSTALLED_APPS = [
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'django_password_validators',
	'user'
]

MIDDLEWARE = [
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.postgresql',
		'HOST': os.getenv('DATABASE_HOST'), # For local development, use 'localhost' or '127.0.0.1'
		'PORT': os.getenv('DATABASE_PORT'), # Default PostgreSQL port is usually '5432' 
		'NAME': os.getenv('DATABASE_NAME'),
		'USER': os.getenv('DATABASE_USER'),
		'PASSWORD': os.getenv('DATABASE_PASSWORD'),
	}
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

PASSWORD_HASHERS = [
	'django.contrib.auth.hashers.Argon2PasswordHasher',
	'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
	'django.contrib.auth.hashers.BCryptPasswordHasher',
	'django.contrib.auth.hashers.PBKDF2PasswordHasher',
	'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
]

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
		'OPTIONS': {
			'min_length': int(os.getenv('PASSWORD_MIN_LENGTH', 8)),
		}
	},
	{
		'NAME': 'user.validators.MaxLengthValidator',
		'OPTIONS': {
			'max_length': int(os.getenv('PASSWORD_MAX_LENGTH', 128)),
		}
	},
	{
		'NAME': 'django_password_validators.password_character_requirements.password_validation.PasswordCharacterValidator',
		'OPTIONS': {
			 'min_length_lower': int(os.getenv('PASSWORD_MIN_AMOUNT_LOWER', 1)),
			 'min_length_upper': int(os.getenv('PASSWORD_MIN_AMOUNT_UPPER', 1)),
			 'min_length_digit': int(os.getenv('PASSWORD_MIN_AMOUNT_DIGIT', 1)),
			 'min_length_special': int(os.getenv('PASSWORD_MIN_AMOUNT_SPECIAL', 1)),
			 'special_characters': os.getenv('PASSWORD_SPECIAL_CHARACTERS', '_*-+!?,.;:')
		 }
	},
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Rome'

# enables internationalization features. This means Django is prepared to handle applications that need to support multiple languages and locales
# USE_I18N = True
USE_I18N = False

# Django will display numbers and dates using the format of the current locale
USE_L10N = True

# Django will use timezone-aware datetimes internally
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR.parent / 'static'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'user.User'